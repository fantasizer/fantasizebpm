{"remainingRequest":"D:\\development\\github\\fantasizebpm\\node_modules\\thread-loader\\dist\\cjs.js??ref--10-2!D:\\development\\github\\fantasizebpm\\node_modules\\ts-loader\\index.js??ref--10-3!D:\\development\\github\\fantasizebpm\\node_modules\\angular-router-loader\\src\\index.js!D:\\development\\github\\fantasizebpm\\node_modules\\tslint-loader\\index.js!D:\\development\\github\\fantasizebpm\\src\\main\\webapp\\app\\blocks\\interceptor\\errorhandler.interceptor.ts","dependencies":[{"path":"D:\\development\\github\\fantasizebpm\\src\\main\\webapp\\app\\blocks\\interceptor\\errorhandler.interceptor.ts","mtime":1529479170009},{"path":"D:\\development\\github\\fantasizebpm\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"D:\\development\\github\\fantasizebpm\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\development\\github\\fantasizebpm\\node_modules\\thread-loader\\dist\\cjs.js","mtime":0},{"path":"D:\\development\\github\\fantasizebpm\\node_modules\\ts-loader\\index.js","mtime":1519365772000},{"path":"D:\\development\\github\\fantasizebpm\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"D:\\development\\github\\fantasizebpm\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar ErrorHandlerInterceptor = /** @class */ (function () {\r\n    function ErrorHandlerInterceptor(eventManager) {\r\n        this.eventManager = eventManager;\r\n    }\r\n    ErrorHandlerInterceptor.prototype.intercept = function (request, next) {\r\n        var _this = this;\r\n        return next.handle(request).pipe(operators_1.tap(function (event) { }, function (err) {\r\n            if (err instanceof http_1.HttpErrorResponse) {\r\n                if (!(err.status === 401 && (err.message === '' || (err.url && err.url.indexOf('/api/account') === 0)))) {\r\n                    if (_this.eventManager !== undefined) {\r\n                        _this.eventManager.broadcast({ name: 'fantasizebpmApp.httpError', content: err });\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n    };\r\n    return ErrorHandlerInterceptor;\r\n}());\r\nexports.ErrorHandlerInterceptor = ErrorHandlerInterceptor;\r\n",{"version":3,"file":"D:\\development\\github\\fantasizebpm\\src\\main\\webapp\\app\\blocks\\interceptor\\errorhandler.interceptor.ts","sourceRoot":"","sources":["D:\\development\\github\\fantasizebpm\\node_modules\\angular-router-loader\\src\\index.js!D:\\development\\github\\fantasizebpm\\node_modules\\tslint-loader\\index.js!D:\\development\\github\\fantasizebpm\\src\\main\\webapp\\app\\blocks\\interceptor\\errorhandler.interceptor.ts"],"names":[],"mappings":";;AACA,6CAA+G;AAE/G,4CAAqC;AAErC;IACI,iCAAoB,YAA6B;QAA7B,iBAAY,GAAZ,YAAY,CAAiB;IAAG,CAAC;IAErD,2CAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QAAtD,iBAeC;QAdG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC5B,eAAG,CACC,UAAC,KAAqB,IAAM,CAAC,EAC7B,UAAC,GAAQ;YACL,EAAE,CAAC,CAAC,GAAG,YAAY,wBAAiB,CAAC,CAAC,CAAC;gBACnC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtG,EAAE,CAAC,CAAC,KAAI,CAAC,YAAY,KAAK,SAAS,CAAC,CAAC,CAAC;wBAClC,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,2BAA2B,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;oBACrF,CAAC;gBACL,CAAC;YACL,CAAC;QACL,CAAC,CACJ,CACJ,CAAC;IACN,CAAC;IACL,8BAAC;AAAD,CAAC,AAnBD,IAmBC;AAnBY,0DAAuB","sourcesContent":["import { JhiEventManager } from 'ng-jhipster';\nimport { HttpInterceptor, HttpRequest, HttpErrorResponse, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n    constructor(private eventManager: JhiEventManager) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(\n            tap(\n                (event: HttpEvent<any>) => {},\n                (err: any) => {\n                    if (err instanceof HttpErrorResponse) {\n                        if (!(err.status === 401 && (err.message === '' || (err.url && err.url.indexOf('/api/account') === 0)))) {\n                            if (this.eventManager !== undefined) {\n                                this.eventManager.broadcast({ name: 'fantasizebpmApp.httpError', content: err });\n                            }\n                        }\n                    }\n                }\n            )\n        );\n    }\n}\n"]}]}